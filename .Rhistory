# File "SpringSpatesJK_8713.txt"
spatesJK = read.table(file.choose(), header=T, sep='\t', quote='')
spatesJK2 = cbind(spatesJK[5,],spatesJK[6,2:3],spatesJK[7,2:3])
row.names(spatesJK2) = 1
spatesJK2[2,] = c(spatesJK[1,],spatesJK[2,2:3],c(NA,NA))
spatesJK2[3,] = c(spatesJK[3,],rep(NA,4))
spatesJK2[4,] = c(spatesJK[4,],rep(NA,4))
spatesJK2[5,] = c(spatesJK[8,],rep(NA,4))
names(spatesJK2)[2:7] = c('ssMaxDischarge1','ssRdate1','ssMaxDischarge2','ssRdate2','ssMaxDischarge3','ssRdate3')
AlgalTransects = read.table(file.choose(), header=T, na.strings='', sep='\t', fill=TRUE, quote='')
look at class of columns
sapply(AlgalTransects, class)
# Problematic entries
# record id 7351: xloc should be 'marker RHS "N"'
# record id 7557: has '20 cm dbh' for xloc
# record id 16488: depth is 3236
# fix record 16488 -- assign depth to be NA
AlgalTransects[which(AlgalTransects$id==16488),'depth'] = NA
# Format dates #########
AlgalTransects$Rdate = as.Date(AlgalTransects$date, format= '%m/%d/%Y')
AlgalTransects2 = transform(AlgalTransects, Transect = as.factor(Transect),	month = format(Rdate, '%m'),yearday = as.numeric(format(Rdate, '%j')), year = as.numeric(format(Rdate, '%Y')))
AlgalTransects2$WaterYear = as.factor(ifelse(as.numeric(format(AlgalTransects2$Rdate,'%m'))<=9, as.character(as.numeric(AlgalTransects2$year)-1), as.character(AlgalTransects2$year)))
# Create variables combining time and location #######
# create an identifier for each transect-date (ie each survey of a transect)
AlgalTransects2$survey = paste(AlgalTransects2$transect,AlgalTransects2$date)
# Add Hydrologic data for floods and spring spates #######
# flooding
# bankfull flood as defined in Power et al 2008
# currently only available 1988-2013
# Flood years for the season preceding summer: 1988-2013
# Input file: AngeloBankfullFlood_1988-2013.txt
flood = read.table(file.choose(), header=T, sep='\t', quote='')
#
# note that year refers to the algae year, or 'SummerYear', not the water year
# change name of year column to match algal transect data base
names(flood)[1] = 'year'
# add column for previous year's flooding
# not the winter directly preceding the current growing season, but the one before it
flood$PrevYearFlood = c('NA', as.character(flood$Flood[1:length(flood$Flood)-1]))
# add column for 2-year flood combinations
flood$TwoYears = c('NA', as.character(paste(flood$PrevYearFlood[-1],':',flood$Flood[-1])))
# integrate flooding data into Algal data base
AlgalTransects2 = merge(AlgalTransects2,flood, by='year',all.x=T)
# Spring spates
#
spatesJK = read.table(file.choose(), header=T, sep='\t', quote='')
spatesJK2 = cbind(spatesJK[5,],spatesJK[6,2:3],spatesJK[7,2:3])
row.names(spatesJK2) = 1
spatesJK2[2,] = c(spatesJK[1,],spatesJK[2,2:3],c(NA,NA))
spatesJK2[3,] = c(spatesJK[3,],rep(NA,4))
spatesJK2[4,] = c(spatesJK[4,],rep(NA,4))
spatesJK2[5,] = c(spatesJK[8,],rep(NA,4))
names(spatesJK2)[2:7] = c('ssMaxDischarge1','ssRdate1','ssMaxDischarge2','ssRdate2','ssMaxDischarge3','ssRdate3')
#
spatesMEP = read.table(file.choose(), header=T, sep='\t', quote='')
# integrate spate data
AlgalTransects2 = merge(AlgalTransects2,spatesJK2, by='year',all.x=T)
AlgalTransects2 = merge(AlgalTransects2,spatesMEP, by='year',all.x=T)
# Add hydrologic data for discharge variables ###########
# annual summary of growing season
# cumulative discharge from Apr 15 - June 21
# growing season to date
# average daily mean discharge from Apr 15 - current date
# Create algal variables ##########
# Make an integrated Cladophora variable
# shows Cladophora height, with 0 for no Cladophora
AlgalTransects2$CladInt =
ifelse(AlgalTransects2$algaedom == 'Cladophora glomerata attached', AlgalTransects2$htdom,
ifelse(AlgalTransects2$algaesub == 'Cladophora glomerata attached' , AlgalTransects2$htsub,
ifelse(AlgalTransects2$algaesub2 == 'Cladophora glomerata attached', AlgalTransects2$htsub2,0)))
AlgalTransects2$CladInt[is.na(AlgalTransects2$CladInt)] = 0
# Create single variable for dominant macroalgae
# Reformat algaedom column
# Change NA to "bare"
AlgalTransects2$algaeStates<-factor(AlgalTransects2$algaedom, levels = c(levels(AlgalTransects2$algaedom),"bare"))
b<-which(is.na(AlgalTransects2$algaeStates)==TRUE)
AlgalTransects2$algaeStates[b]<-"bare"
# recode algaeStates into specificied categories
# install.packages ("car") to use "recode" command
library(car)
levels(AlgalTransects2$algaeStates)
# recode to desired categories
AlgalTransects2$algaeStates <-recode(AlgalTransects2$algaeStates, "c('black crust','Diatom skin','green skin','litter')='bare';c('Cladophora glomerata attached','Cladophora glomerata loose')='Cladophora'; c('Mougeotia','Zygnema')='Zygnematales';c('Cyanobac filaments','general blue-green algae','Nostoc balls','Nostoc ears','Rivularia')='Cyanobacteria'")
table(AlgalTransects2$algaeStates,exclude=NULL)
# Create algal presence/absence variables
# Create columns for presence/absence of algal functional groups Cladophora, Nostoc/Rivularia, and Zygnematales
# edible, filamentous greens: Cladophora
# N-fixing cyanobacteria: Rivularia, Nostoc
# 'inedible' mucous-secreting greens: Zygnema, Mougeotia, Spirogyra
levels(AlgalTransects2$algaedom)
levels(AlgalTransects2$algaesub)
levels(AlgalTransects2$algaesub2)
#prevalence of the different algae types
table(as.factor(c(as.character(AlgalTransects2$algaedom), as.character(AlgalTransects2$algaesub),as.character(AlgalTransects2$algaesub2))))
# Cladophora: is Clad present? (yes=1, no=0)
AlgalTransects2$Clad = as.numeric(AlgalTransects2$algaedom == 'Cladophora glomerata attached' | AlgalTransects2$algaedom == 'Cladophora glomerata loose' | AlgalTransects2$algaesub == 'Cladophora glomerata attached' | AlgalTransects2$algaesub == 'Cladophora glomerata loose' | AlgalTransects2$algaesub2 == 'Cladophora glomerata attached' | AlgalTransects2$algaesub2 == 'Cladophora glomerata loose')
AlgalTransects2$Clad[is.na(AlgalTransects2$Clad)] = 0
# N-fixing cyanobacteria: is Nos or riv present or Anabaena present? (yes=1, no=0) (only 2 anabaena in whole data set)
AlgalTransects2$NosRiv = as.numeric(AlgalTransects2$algaedom == 'Nostoc balls' | AlgalTransects2$algaedom == 'Nostoc ears' | AlgalTransects2$algaedom == 'Rivularia' | AlgalTransects2$algaesub == 'Nostoc balls' | AlgalTransects2$algaesub == 'Nostoc ears' | AlgalTransects2$algaesub == 'Rivularia' | AlgalTransects2$algaesub2 == 'Nostoc balls' | AlgalTransects2$algaesub2 == 'Nostoc ears' | AlgalTransects2$algaesub2 == 'Rivularia')
AlgalTransects2$NosRiv[is.na(AlgalTransects2$NosRiv)] = 0
# are zygnemataceae present? (moug, spg, zyg)
AlgalTransects2$Zyg = as.numeric(AlgalTransects2$algaedom == 'Mougeotia' | AlgalTransects2$algaedom == 'Zygnema' | AlgalTransects2$algaesub == 'Mougeotia' | AlgalTransects2$algaesub == 'Zygnema' | AlgalTransects2$algaesub2 == 'Mougeotia' | AlgalTransects2$algaesub2 == 'Zygnema')
AlgalTransects2$Zyg[is.na(AlgalTransects2$Zyg)] = 0
solstice_watts<-read.csv(file.choose())
solstice_watts[,1]<-as.factor(solstice_watts[,1])
AlgalTransects2$xstrmInt<-as.integer(round(AlgalTransects2$xstrm, digits=0))
AlgalTransects2<-merge(AlgalTransects2,solstice_watts, all.x = TRUE)
str(AlgalTransects2)
?pairs
?vif
vif(lm(htdom ~ depth + flow, data=AlgalTransects2))
pairs(~ htdom ~ depth + flow, data=AlgalTransects2, )
pairs(~ depth + flow, data=AlgalTransects2)
pairs(~ depth + cwatts_solstice, data=AlgalTransects2)
vif(lm(htdom ~ depth + flow + cwatts_solstice, data=AlgalTransects2))
pairs(~ depth + cwatts_solstice + flow, data=AlgalTransects2)
cml<-read.csv(file.choose())
head(cml)
str(cml)
library(ggplot2)
library(RColorBrewer)
#install.packages("gridExtra")
library(gridExtra)
plot_themeCML <-theme(panel.grid = element_blank(),  panel.background = element_rect(color="gray5"), panel.border = element_blank(), axis.text = element_text(colour="black"), axis.line = element_line(colour="black"), legend.background = element_rect(size=0.25, color="black"), legend.key = element_blank(),strip.background=element_blank(),strip.text.y=element_text(angle=0))
# Create labels for the facets
t_labeller <-function(var,value){
value<-as.character(value)
if (var=="Transect"){
value[value=="2"] <- "Transect 2"
value[value=="2.5"] <- "Transect 2.5"
value[value=="3"] <- "Transect 3"
value[value=="4"] <- "Transect 4"
}
if (var=="Flood"){
value[value=="flood"] <- "flood"
value[value=="no flood"] <-"no flood"
}
return(value)
}
# Plot of Clad Height as a function of Irradiance
pl<-ggplot(data=cml, aes(x=watt_avg,y=CladInt,group=Transect))
pl + geom_point(size=1) + facet_grid(Flood~Transect, scales='free_y', labeller=t_labeller) + labs(x="Irradiance (Avg. Watt Hours / Day)", y="Max. Clad Height (cm)") + ggtitle("Max. Clad. Height as a Function of Irradiance") + plot_themeCML
pl<-ggplot(data=cml, aes(x=watt_avg,y=CladInt,group=Transect))
cml<-read.csv(file.choose())
head(cml)
str(cml)
t_labeller <-function(var,value){
value<-as.character(value)
if (var=="Transect"){
value[value=="2"] <- "Transect 2"
value[value=="2.5"] <- "Transect 2.5"
value[value=="3"] <- "Transect 3"
value[value=="4"] <- "Transect 4"
}
if (var=="Flood"){
value[value=="flood"] <- "flood"
value[value=="no flood"] <-"no flood"
}
return(value)
}
head(CladMaxPointWet)
AlgalTransects2 = read.table(file.choose(),sep='\t',header=T,quote='')
str(AlgalTransects2)
CladMaxPoint = aggregate(CladInt ~ Transect + xstrm + year , data=AlgalTransects2, FUN=max)
AlgalTransects2 = read.table(file.choose(),sep='\t',header=T,quote='')
CladMaxPoint = aggregate(CladInt ~ Transect + xstrm + year , data=AlgalTransects2, FUN=max)
cml<-read.csv(file.choose())
head(cml)
str(cml)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
plot_themeCML <-theme(panel.grid = element_blank(),  panel.background = element_rect(color="gray5"), panel.border = element_blank(), axis.text = element_text(colour="black"), axis.line = element_line(colour="black"), legend.background = element_rect(size=0.25, color="black"), legend.key = element_blank(),strip.background=element_blank(),strip.text.y=element_text(angle=0))
t_labeller <-function(var,value){
value<-as.character(value)
if (var=="Transect"){
value[value=="2"] <- "Transect 2"
value[value=="2.5"] <- "Transect 2.5"
value[value=="3"] <- "Transect 3"
value[value=="4"] <- "Transect 4"
}
if (var=="Flood"){
value[value=="flood"] <- "flood"
value[value=="no flood"] <-"no flood"
}
return(value)
}
# Plot of Clad Height as a function of Irradiance
pl<-ggplot(data=cml, aes(x=watt_avg,y=CladInt,group=Transect))
pl + geom_point(size=1) + facet_grid(Flood~Transect, scales='free_y', labeller=t_labeller) + labs(x="Irradiance (Avg. Watt Hours / Day)", y="Max. Clad Height (cm)") + ggtitle("Max. Clad. Height as a Function of Irradiance") + plot_themeCML
AlgalTransects = read.table(file.choose(), header=T, na.strings='', sep='\t', fill=TRUE, quote='')
# fill=TRUE solves problems with unequal row lengths
# quote = '' solves the problems created by apostrophes in the data set
# look at class of columns
sapply(AlgalTransects, class)
# Problematic entries
# record id 7351: xloc should be 'marker RHS "N"'
# record id 7557: has '20 cm dbh' for xloc
# record id 16488: depth is 3236
# fix record 16488 -- assign depth to be NA
AlgalTransects[which(AlgalTransects$id==16488),'depth'] = NA
# Format dates #########
AlgalTransects$Rdate = as.Date(AlgalTransects$date, format= '%m/%d/%Y')
AlgalTransects2 = transform(AlgalTransects, Transect = as.factor(Transect),	month = format(Rdate, '%m'),yearday = as.numeric(format(Rdate, '%j')), year = as.numeric(format(Rdate, '%Y')))
AlgalTransects2$WaterYear = as.factor(ifelse(as.numeric(format(AlgalTransects2$Rdate,'%m'))<=9, as.character(as.numeric(AlgalTransects2$year)-1), as.character(AlgalTransects2$year)))
# Create variables combining time and location #######
# create an identifier for each transect-date (ie each survey of a transect)
AlgalTransects2$survey = paste(AlgalTransects2$transect,AlgalTransects2$date)
# Add Hydrologic data for floods and spring spates #######
# flooding
# bankfull flood as defined in Power et al 2008
# currently only available 1988-2013
# Flood years for the season preceding summer: 1988-2013
# Input file: AngeloBankfullFlood_1988-2013.txt
flood = read.table(file.choose(), header=T, sep='\t', quote='')
#
# note that year refers to the algae year, or 'SummerYear', not the water year
# change name of year column to match algal transect data base
names(flood)[1] = 'year'
# add column for previous year's flooding
# not the winter directly preceding the current growing season, but the one before it
flood$PrevYearFlood = c('NA', as.character(flood$Flood[1:length(flood$Flood)-1]))
# add column for 2-year flood combinations
flood$TwoYears = c('NA', as.character(paste(flood$PrevYearFlood[-1],':',flood$Flood[-1])))
# integrate flooding data into Algal data base
AlgalTransects2 = merge(AlgalTransects2,flood, by='year',all.x=T)
spatesJK = read.table(file.choose(), header=T, sep='\t', quote='')
spatesJK2 = cbind(spatesJK[5,],spatesJK[6,2:3],spatesJK[7,2:3])
row.names(spatesJK2) = 1
spatesJK2[2,] = c(spatesJK[1,],spatesJK[2,2:3],c(NA,NA))
spatesJK2[3,] = c(spatesJK[3,],rep(NA,4))
spatesJK2[4,] = c(spatesJK[4,],rep(NA,4))
spatesJK2[5,] = c(spatesJK[8,],rep(NA,4))
names(spatesJK2)[2:7] = c('ssMaxDischarge1','ssRdate1','ssMaxDischarge2','ssRdate2','ssMaxDischarge3','ssRdate3')
spatesMEP = read.table(file.choose(), header=T, sep='\t', quote='')
AlgalTransects2 = merge(AlgalTransects2,spatesJK2, by='year',all.x=T)
AlgalTransects2 = merge(AlgalTransects2,spatesMEP, by='year',all.x=T)
# Add hydrologic data for discharge variables ###########
# annual summary of growing season
# cumulative discharge from Apr 15 - June 21
# growing season to date
# average daily mean discharge from Apr 15 - current date
# Create algal variables ##########
# Make an integrated Cladophora variable
# shows Cladophora height, with 0 for no Cladophora
AlgalTransects2$CladInt =
ifelse(AlgalTransects2$algaedom == 'Cladophora glomerata attached', AlgalTransects2$htdom,
ifelse(AlgalTransects2$algaesub == 'Cladophora glomerata attached' , AlgalTransects2$htsub,
ifelse(AlgalTransects2$algaesub2 == 'Cladophora glomerata attached', AlgalTransects2$htsub2,0)))
AlgalTransects2$CladInt[is.na(AlgalTransects2$CladInt)] = 0
# Create single variable for dominant macroalgae
# Reformat algaedom column
# Change NA to "bare"
AlgalTransects2$algaeStates<-factor(AlgalTransects2$algaedom, levels = c(levels(AlgalTransects2$algaedom),"bare"))
b<-which(is.na(AlgalTransects2$algaeStates)==TRUE)
AlgalTransects2$algaeStates[b]<-"bare"
# recode algaeStates into specificied categories
# install.packages ("car") to use "recode" command
library(car)
levels(AlgalTransects2$algaeStates)
# recode to desired categories
AlgalTransects2$algaeStates <-recode(AlgalTransects2$algaeStates, "c('black crust','Diatom skin','green skin','litter')='bare';c('Cladophora glomerata attached','Cladophora glomerata loose')='Cladophora'; c('Mougeotia','Zygnema')='Zygnematales';c('Cyanobac filaments','general blue-green algae','Nostoc balls','Nostoc ears','Rivularia')='Cyanobacteria'")
table(AlgalTransects2$algaeStates,exclude=NULL)
# Create algal presence/absence variables
# Create columns for presence/absence of algal functional groups Cladophora, Nostoc/Rivularia, and Zygnematales
# edible, filamentous greens: Cladophora
# N-fixing cyanobacteria: Rivularia, Nostoc
# 'inedible' mucous-secreting greens: Zygnema, Mougeotia, Spirogyra
levels(AlgalTransects2$algaedom)
levels(AlgalTransects2$algaesub)
levels(AlgalTransects2$algaesub2)
#prevalence of the different algae types
table(as.factor(c(as.character(AlgalTransects2$algaedom), as.character(AlgalTransects2$algaesub),as.character(AlgalTransects2$algaesub2))))
# Cladophora: is Clad present? (yes=1, no=0)
AlgalTransects2$Clad = as.numeric(AlgalTransects2$algaedom == 'Cladophora glomerata attached' | AlgalTransects2$algaedom == 'Cladophora glomerata loose' | AlgalTransects2$algaesub == 'Cladophora glomerata attached' | AlgalTransects2$algaesub == 'Cladophora glomerata loose' | AlgalTransects2$algaesub2 == 'Cladophora glomerata attached' | AlgalTransects2$algaesub2 == 'Cladophora glomerata loose')
AlgalTransects2$Clad[is.na(AlgalTransects2$Clad)] = 0
# N-fixing cyanobacteria: is Nos or riv present or Anabaena present? (yes=1, no=0) (only 2 anabaena in whole data set)
AlgalTransects2$NosRiv = as.numeric(AlgalTransects2$algaedom == 'Nostoc balls' | AlgalTransects2$algaedom == 'Nostoc ears' | AlgalTransects2$algaedom == 'Rivularia' | AlgalTransects2$algaesub == 'Nostoc balls' | AlgalTransects2$algaesub == 'Nostoc ears' | AlgalTransects2$algaesub == 'Rivularia' | AlgalTransects2$algaesub2 == 'Nostoc balls' | AlgalTransects2$algaesub2 == 'Nostoc ears' | AlgalTransects2$algaesub2 == 'Rivularia')
AlgalTransects2$NosRiv[is.na(AlgalTransects2$NosRiv)] = 0
# are zygnemataceae present? (moug, spg, zyg)
AlgalTransects2$Zyg = as.numeric(AlgalTransects2$algaedom == 'Mougeotia' | AlgalTransects2$algaedom == 'Zygnema' | AlgalTransects2$algaesub == 'Mougeotia' | AlgalTransects2$algaesub == 'Zygnema' | AlgalTransects2$algaesub2 == 'Mougeotia' | AlgalTransects2$algaesub2 == 'Zygnema')
AlgalTransects2$Zyg[is.na(AlgalTransects2$Zyg)] = 0
### Add cumulative watt hours for the summer solstice (yearday = 172)
#Read in cumulative watt hours data (.csv generated by "LightModel_MarysTransects_CumulativeWattHours.R" script)
solstice_watts<-read.csv(file.choose())
solstice_watts[,1]<-as.factor(solstice_watts[,1])
# Create an xstrm column of integers in the algal dataframe
AlgalTransects2$xstrmInt<-as.integer(round(AlgalTransects2$xstrm, digits=0))
# Merge cumulative watt hours into AlgalTransects2
AlgalTransects2<-merge(AlgalTransects2,solstice_watts, all.x = TRUE)
?write.table
write.table(AlgalTransects2, file="AlgalTransects_Formatted_27Jun2014", sep='\t', quote=F,row.names=F)
px<-ggplot(data=cml, aes(x=xstrm,y=CladInt,group=Transect))
px + geom_point() + geom_line(aes(x=xstrm,y=watt_avg/10), color="red") +
px + geom_point() + geom_line(aes(x=xstrm,y=watt_avg/10), color="red") + geom_point(aes(x=xstrm,y=depth*2, alpha=0.5), color="blue") +	 	facet_grid(Transect~Flood, scales='free_y') + plot_themeCML
px + geom_point() + geom_line(aes(x=xstrm,y=watt_avg/10), color="red") + geom_point(aes(x=xstrm,y=depth*2, alpha=0.5), color="blue") +	 	facet_grid(Transect~Flood, scales='free_y') + plot_themeCML
str(cml)
AlgalTransects2 = read.table(file.choose(),sep='\t',header=T,quote='')
CladMaxPoint = aggregate(CladInt ~ Transect + xstrm + year , data=AlgalTransects2, FUN=max)
LastGrowSurvey = aggregate(yearday ~ Transect + year, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=max)
WetPoints = AlgalTransects2[which(paste(AlgalTransects2$Transect,AlgalTransects2$year,AlgalTransects2$yearday,sep='-') %in% paste(LastGrowSurvey$Transect,LastGrowSurvey$year,LastGrowSurvey$yearday,sep='-')),c('Transect','year','xstrm','yearday','depth')]
WetPoints = WetPoints[which(WetPoints$xstrm%%1 == 0),]
aggregate(xstrm ~ Transect,data=WetPoints,FUN=min)
aggregate(xstrm ~ Transect,data=WetPoints,FUN=max)
# Refine Clad Max data to include only wet points
CladMaxPointWet = CladMaxPoint[which(paste(CladMaxPoint$Transect,CladMaxPoint$year,CladMaxPoint$xstrm)%in%paste(WetPoints$Transect,WetPoints$year,WetPoints$xstrm)),]
# add growing season averages of flow, depth, and light
FlowAvg = aggregate(flow ~ year + Transect + xstrm, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=mean)
DepthAvg = aggregate(depth ~ year + Transect + xstrm, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=mean)
CladMaxPointWet = merge(CladMaxPointWet, FlowAvg, all.x=T)
CladMaxPointWet = merge(CladMaxPointWet, DepthAvg, all.x=T)
AlgalTransects2$stab = as.numeric(with(AlgalTransects2, ifelse(substr=='NAN',NA,ifelse(substr=='bedrock',3,ifelse(substr=='boulders',2,ifelse(substr=='cobbles',1,0))))))
SubAvg = aggregate(stab ~ year + Transect + xstrm, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=mean)
CladMaxPointWet = merge(CladMaxPointWet,SubAvg,all.x=T)
library(ggplot2)
hist(log(CladMaxPointWet$CladInt[which(CladMaxPointWet$CladInt>0)], base=10), breaks=20)
MaxHeight_p1 = ggplot(data=subset(CladMaxPointWet, CladInt>0), aes(x=CladInt)) + geom_density() + facet_grid(.~Transect) + scale_x_continuous(limits=c(0,50))
CladMaxPointWet$CladGrowth= CladMaxPointWet$CladInt>=10
head(CladMaxPointWet)
write.csv(CladMaxPointWet, file=file.choose(), row.names=F)
View(cml)
View(CladMaxPointWet)
View(cml)
write
CladMaxPointWet = read.csv(file.choose(),header=T)
View(cml)
CladMaxPointWet = read.csv(file.choose(),header=T)
wattavgf = read.csv(file.choose())
spatesMEP = read.table(file.choose(), header=T, sep='\t', quote='')
head(CladMaxPointWet)
CladMaxPointWet$xstrmInt <- round(CladMaxPointWet$xstrm, digits = 0)
head(CladMaxPointWet)
str(CladMaxPointWet)
cwatthours<-read.csv(file.choose())
str(cwatthours)
cml = merge(CladMaxPointWet, cwatthours, all.x=T)
str(cml)
cml2 = merge(cml, wattavgf, all.x=T)
str(cml2)
cml3 = merge(cml2, spatesMEP, all.x=T)
str(cml3)
cml = merge(CladMaxPointWet, cwatthours, all.x=T)
cml = merge(cml, wattavgf, all.x=T)
cml = merge(cml, spatesMEP, all.x=T)
cml$PrevYearFlood = as.factor(cml$PrevYearFlood)
cml$PrevYearFlood = replace(cml$PrevYearFlood, which(cml$PrevYearFlood=='NA'),NA)
write.csv(cml, file="MaxCladPredictors_27Jun2014.csv")
library(ggplot2)
plot_theme1<-theme(panel.grid = element_blank(), panel.background = element_blank(), axis.text = element_text(colour="black"), axis.line = element_line(colour="black"), legend.key=element_blank())
cml2<-read.csv(file.choose())
head(cml)
head(cml2)
str(cml)
str(cml2)
pl<-ggplot(data=cml2, aes(x=watt_avg,y=CladInt,group=Transect))
pl + geom_point(size=1) + facet_grid(Flood~Transect, scales='free_y', labeller=t_labeller) + labs(x="Irradiance (Avg. Watt Hours / Day)", y="Max. Clad Height (cm)") + ggtitle("Max. Clad. Height as a Function of Irradiance") + plot_themeCML
cml = merge(CladMaxPointWet, cwatthours, all.x=T)
cml = merge(cml, wattavgf, all.x=T)
cml = merge(CladMaxPointWet, cwatthours, all.x=T)
cml = merge(cml, wattavgf, all.x=T)
cml = merge(cml, spatesMEP, all.x=T)
cml$PrevYearFlood = as.factor(cml$PrevYearFlood)
View(CladMaxPointWet)
head(cml2)
pl<-ggplot(data=cml2, aes(x=cwatts_solstice,y=CladInt,group=Transect))
pl + geom_point(size=1) + facet_grid(~Transect, scales='free_y', labeller=t_labeller) + labs(x="Irradiance (Avg. Watt Hours / Day)", y="Max. Clad Height (cm)") + ggtitle("Max. Clad. Height as a Function of Irradiance") + plot_themeCML
View(spatesMEP)
str(clm2)
str(cml2)
vif(lm(CladInt ~ depth + flow + cwatts_solstice, data=AlgalTransects2))
vif(lm(CladInt ~ depth + flow + cwatts_solstice + stab, data=AlgalTransects2))
vif(lm(CladInt ~ depth + flow + cwatts_solstice + stab, data=cml2))
pairs(~ depth + flow + cwatts_solstice + stab, data=cml2)
?vif
AlgalTransects2 = read.table(file.choose(),sep='\t',header=T,quote='')
CladMaxPoint = aggregate(CladInt ~ Transect + xstrm + year + Flood + PrevYearFlood , data=AlgalTransects2, FUN=max)
LastGrowSurvey = aggregate(yearday ~ Transect + year, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=max)
WetPoints = AlgalTransects2[which(paste(AlgalTransects2$Transect,AlgalTransects2$year,AlgalTransects2$yearday,sep='-') %in% paste(LastGrowSurvey$Transect,LastGrowSurvey$year,LastGrowSurvey$yearday,sep='-')),c('Transect','year','xstrm','yearday','depth')]
# remove non-integer points
WetPoints = WetPoints[which(WetPoints$xstrm%%1 == 0),]
# look at width of channel
aggregate(xstrm ~ Transect,data=WetPoints,FUN=min)
aggregate(xstrm ~ Transect,data=WetPoints,FUN=max)
# Refine Clad Max data to include only wet points
CladMaxPointWet = CladMaxPoint[which(paste(CladMaxPoint$Transect,CladMaxPoint$year,CladMaxPoint$xstrm)%in%paste(WetPoints$Transect,WetPoints$year,WetPoints$xstrm)),]
# add growing season averages of flow, depth, and light
FlowAvg = aggregate(flow ~ year + Transect + xstrm, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=mean)
DepthAvg = aggregate(depth ~ year + Transect + xstrm, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=mean)
CladMaxPointWet = merge(CladMaxPointWet, FlowAvg, all.x=T)
CladMaxPointWet = merge(CladMaxPointWet, DepthAvg, all.x=T)
# add substrate data (this still needs work)
# create stability index
# bedrock=3
# boulders=2
# cobbles=1
# gravel,mud,pebbles,roots,sand,silt,wood=0
AlgalTransects2$stab = as.numeric(with(AlgalTransects2, ifelse(substr=='NAN',NA,ifelse(substr=='bedrock',3,ifelse(substr=='boulders',2,ifelse(substr=='cobbles',1,0))))))
SubAvg = aggregate(stab ~ year + Transect + xstrm, data=subset(AlgalTransects2, yearday<=212 & yearday>=91), FUN=mean)
CladMaxPointWet = merge(CladMaxPointWet,SubAvg,all.x=T)
CladMaxPointWet$CladGrowth= CladMaxPointWet$CladInt>=10
head(CladMaxPointWet)
write.csv(CladMaxPointWet, file=file.choose(), row.names=F)
write.csv(CladMaxPointWet, file=file.choose(), row.names=F)
CladMaxPointWet = read.csv(file.choose(),header=T)
CladMaxPointWet$xstrmInt <- round(CladMaxPointWet$xstrm, digits = 0)
wattavgf = read.csv(file.choose())
cwatthours<-read.csv(file.choose())
spatesMEP = read.table(file.choose(), header=T, sep='\t', quote='')
cml = merge(CladMaxPointWet, cwatthours, all.x=T)
cml = merge(cml, wattavgf, all.x=T)
# merge spate data into clad max data set
cml = merge(cml, spatesMEP, all.x=T)
# convert PrevYearFlood to factor and fix NAs
cml$PrevYearFlood = as.factor(cml$PrevYearFlood)
cml$PrevYearFlood = replace(cml$PrevYearFlood, which(cml$PrevYearFlood=='NA'),NA)
?write.csv
head(cml)
write.csv(cml, file.choose(), row.names = FALSE)
View(wattavgf)
CladMaxPointWet = read.csv(file.choose(),header=T)
CladMaxPointWet$xstrmInt <- round(CladMaxPointWet$xstrm, digits = 0)
wattavgf = read.csv(file.choose())
cwatthours<-read.csv(file.choose())
spatesMEP = read.table(file.choose(), header=T, sep='\t', quote='')
cml = merge(CladMaxPointWet, cwatthours, all.x=T)
cml = merge(cml, wattavgf, all.x=T)
# merge spate data into clad max data set
cml = merge(cml, spatesMEP, all.x=T)
# convert PrevYearFlood to factor and fix NAs
cml$PrevYearFlood = as.factor(cml$PrevYearFlood)
cml$PrevYearFlood = replace(cml$PrevYearFlood, which(cml$PrevYearFlood=='NA'),NA)
# Write cml as a .csv "CladLightFloodOutput"
write.csv(cml, file="CladLightFloodOutput, row.names = FALSE)
""
)
str(cml)
"
str(cml)
write.csv(cml, file="CladLightFloodOutput", row.names = FALSE)
write.csv(cml, file="CladLightFloodOutput", row.names = FALSE)
write.csv(cml, file="CladLightFloodOutput.csv", row.names = FALSE)
library(ggplot2)
plot_theme1<-theme(panel.grid = element_blank(), panel.background = element_blank(), axis.text = element_text(colour="black"), axis.line = element_line(colour="black"), legend.key=element_blank())
theme_CLF<-theme(panel.grid = element_blank(), panel.background = element_blank(), axis.text = element_text(colour="black"), axis.line = element_line(colour="black"), legend.key=element_blank())
ggplot(data=subset(cml, PrevYearFlood!='NA'), aes(x=CladInt+1, color=Transect)) + geom_density() + facet_grid(Flood~PrevYearFlood) + scale_x_log10() + theme_CLF
MaxHeight.plot.f1 =   ggplot(data=subset(cml, PrevYearFlood!='NA'), aes(x=CladInt+1, color=Transect)) + geom_density() + facet_grid(Flood~PrevYearFlood) + scale_x_log10() + theme_CLF
MaxHeight.plot.f1 =   ggplot(data=subset(cml, PrevYearFlood!='NA'), aes(x=CladInt+1, color=Transect)) + geom_density() + facet_grid(Flood~PrevYearFlood) + scale_x_log10() + theme_CLF; MaxHeight.plot.f1
MaxHeight.plot.f1
MaxHeight.plot.f1 =   ggplot(data=subset(cml, PrevYearFlood!='NA'), aes(x=CladInt, color=Transect)) + geom_density() + facet_grid(Flood~PrevYearFlood) + scale_x_log10() + theme_CLF; MaxHeight.plot.f1
p<-ggplot(data=cml, aes(x=watt_avg,y=CladInt,group=Transect))
p + geom_point() + facet_grid(Flood~Transect, scales='free_y')
p2<-ggplot(data=cml, aes(x=xstrm,y=CladInt+1,group=Transect)) + theme_CFL
p + geom_point() + facet_grid(Flood~Transect, scales='free_y') + theme_CFL
theme_CLF<-theme(panel.grid = element_blank(), panel.background = element_blank(), axis.text = element_text(colour="black"), axis.line = element_line(colour="black"), legend.key=element_blank())
p + geom_point() + facet_grid(Flood~Transect, scales='free_y') + theme_CLF
p + geom_point() + facet_grid(Flood~Transect, scales='free_y') + theme_bw()
p2<-ggplot(data=cml, aes(x=xstrm,y=CladInt+1,group=Transect))
p2 + geom_point(alpha=.2, size=2) + geom_line(aes(x=xstrm,y=watt_avg/5), color="orangered") + facet_grid(.~Transect, scales='free_y') + plot_theme1 + geom_ribbon(aes(ymin=(watt_avg - watt_stdev)/5, ymax=(watt_avg + watt_stdev)/5),fill='orangered',alpha=0.2) + scale_y_log10(limits=c(1,1000)) + geom_smooth(color='green2',fill='green2',se=T, alpha=.3) + theme_bw()
p2 + geom_point(alpha=.2, size=2) + geom_line(aes(x=xstrm,y=watt_avg/5), color="orangered") + facet_grid(.~Transect, scales='free_y') + geom_ribbon(aes(ymin=(watt_avg - watt_stdev)/5, ymax=(watt_avg + watt_stdev)/5),fill='orangered',alpha=0.2) + scale_y_log10(limits=c(1,1000)) + geom_smooth(color='green2',fill='green2',se=T, alpha=.3) + theme_bw()
View(cml)
p3<-ggplot(data=cml, aes(x=cwatts_solstice,y=CladInt,group=Transect))
p3 + geom_point() + facet_grid(Flood~Transect, scales='free_y') + theme_bw()
p3<-ggplot(data=cml, aes(x=cwatts_solstice/10000,y=CladInt,group=Transect))
p3 + geom_point() + facet_grid(Flood~Transect, scales='free_y') + theme_bw()
ggplot(data=cml, aes(x=cwatts_solstice, y=watt_avg)) + geom_point() + facet.grid(.~Transect) + theme_bw()
ggplot(data=cml, aes(x=cwatts_solstice, y=watt_avg)) + geom_point() + facet_grid(.~Transect) + theme_bw()
pairs(cml)
?pairs
?pairs
View(cml)
View(cml)
pairs(~ flow + depth + cwatts_solstice + watt_avg, data=cml)
?vif
View(CladMaxPointWet)
names(AlgalTransects2)
levels(AlgalTransects2$substr)
PtsSampled = aggregate(substr~tranxstr,data=AlgalTransects2,FUN=length)
str(AlgalTransects2)
PtsSampled = aggregate(substr~xstrm,data=AlgalTransects2,FUN=length)
PtsSampled[order(PtsSampled$substr,decreasing=T),]
hist(log(PtsSampled$substr,10))
PtsSampled10 = droplevels(PtsSampled[which(PtsSampled$substr>=10),'xstrm'])
head(PtsSampled)
View(AlgalTransects2)
View(AlgalTransects2)
levels(AlgalTransects2$substr)
?aggregate
View(AlgalTransects2)
subLength<-aggregate(substr ~ Transect + xstrm + year, data=AlgalTransects2, FUN=length)
str(subLength)
str(AlgalTransects2  )
unique(subLength$substr)
?aggregate
hist(subLength$substr)
subMode<-aggregate(substr ~ Transect + xstrm + year, data=AlgalTransects2, FUN=mode)
str(subMode)
unique(subMode$substr)
subMode<-aggregate(as.character(substr) ~ Transect + xstrm + year, data=AlgalTransects2, FUN=mode)
str(subMode)
subMode<-aggregate(as.numeric(substr) ~ Transect + xstrm + year, data=AlgalTransects2, FUN=mode)
str(subMode)
?mode
?mean
?mod
AlgalTransects2.sum <- read.table(file.choose(),sep='\t',header=T,quote='')
head
head(AlgalTransects2.sum)
AlgalTransects2<-read.table(file.choose())
AlgalTransects2.sum <- read.table(file.choose(),sep='\t',header=T,quote='')
str(AlgalTransects2.sum)
head(AlgalTransects)
str(AlgalTransects)
