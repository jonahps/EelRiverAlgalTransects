str(julCS)
head(sm)
str(sm)
sml<-sm[which(sm$week >=13 & sm$week <=33),]
# Drop unused levels in transect factor (artifacts of raw data)
sml$tx<-droplevels(sml$tx)
# Calculate the average watts per transect point for the entire summer
wattavg<-aggregate(watts ~ Transect + xstrm, data=sml, FUN=mean)
wattsd<-aggregate(watts ~ Transect + xstrm, data=sml, FUN=sd)
wattavg<-cbind(wattavg,wattsd[,3])
colnames(wattavg)[3:4]<-c("watt_avg","watt_stdev")
head(wattavg)
str(wattavg)
head(julCS)
str(Adf)
unique(Adf$xstrm)
head(julCS)
Ldfw2<-reshape(data=Ldfr, timevar= ("Transect","xstrm","julianday"), idvar = c("tx"), new.row.names= unique(Ldf$tx), direction="wide")
Ldfw2<-reshape(data=Ldfr, timevar= ("julianday"), idvar = c("Transect","xstrm","tx"), new.row.names= unique(Ldf$tx), direction="wide")
head(Ldfr)
head(Ldf)
Ldfr<-Ldf[,c(-3,-4,-8)]
head(Ldfr)
Ldfw2<-reshape(data=Ldfr, timevar= ("julianday"), idvar = c("Transect","xstrm","tx"), new.row.names= unique(Ldf$tx), direction="wide")
head(Ldfw2)
Ldfw<-reshape(data=Ldfr, timevar= ("julianday"), idvar = c("Transect","xstrm","tx"), new.row.names= unique(Ldf$tx), direction="wide")
head(Ldfw)
dim(Ldfw)
juldf<-as.data.frame(rep(Ldfw[,c(4:16)],each = 7))
colnames(juldf)<-as.character(jd)
rownames(juldf)<-as.character(Ldfw$tx)
#Empty data frame to put the cummulative sum values in
julCS<-data.frame(matrix(nrow=71, ncol=91))
colnames(julCS)<-as.character(jd)
rownames(julCS)<-as.character(Ldfw$tx);head(julCS)
# Loop to calculate the cummulative sum of watt hours per day and put it in the julCS data frame
for(i in 1:length(rownames(julCS))){
julCS[i,]<-cumsum(as.numeric(juldf[i,]))
}
str(julCS)
head(julCS)
dim(julCS)
dim(Ldfw)
head(Ldfw)
head(Ldfw)
julCS2<-cbind(Ldfw[,c(1:3)],JulCS)
julCS2<-cbind(c(Ldfw[,c(1:3)],JulCS))
str(julCS)
julCS2<-cbind(c(Ldfw[,c(1:3)],julCS))
head(julCS2)
julCS2<-cbind(c(julCS[,], Ldfw[,c(1:3)]))
head(julCS2)
?cbind
julCS2<-cbind(julCS[,], Ldfw[,c(1:3)])
head(julCS2)
julCS2<-cbind(Ldfw[,c(1:3)], julCS)
head(julCS2)
head(wattavg)
head(julCS,30)
julCS<-cbind(Ldfw[,c(1:3)], julCS)
julCS<-data.frame(matrix(nrow=71, ncol=91))
colnames(julCS)<-as.character(jd)
rownames(julCS)<-as.character(Ldfw$tx);head(julCS)
# Loop to calculate the cummulative sum of watt hours per day and put it in the julCS data frame
for(i in 1:length(rownames(julCS))){
julCS[i,]<-cumsum(as.numeric(juldf[i,]))
}
## Add Transect, xstrm, and tx columns to the cummulative sum data
julCSb<-cbind(Ldfw[,c(1:3)], julCS)
head(julCSb,30)
julCSb[30,c(1:4)]
julCSb[c(1:30),c(1:4)]
julCSb[,c(1:4)]
test<-julCSb[,c(1:4)]
test<-julCSb[,c(1:5)]
head(test)
meant<-mean(test[c(1:5),c(4:5)])
meant<-mean(test[1,c(4:5)], test[2,c(4:5)])
meant<-mean(test[1,4], test[2,4])
meant
meantt<-sum(test[1,c(4,5)], test[2,c(4,5)])/2
meant
meantt
meantt<-sum(test[1,], test[2,])/2
head(test)
test
nxstrm<-c(1,2,seq(from=4, to=32, by=2))
nxstrm
nxstrm<-c(1,2,seq(from=4, to=32, by=2), seq(from=1, to=31, by=2), seq(from=1, to=31, by=2), seq(from=1, to=35, by=2))
nxstrm
ntransect<-c(rep(2,17), rep(2.5, 16), rep(3, 16), rep(4, 18)
ntransect<-c(rep(2,17), rep(2.5, 16), rep(3, 16), rep(4, 18))
ntransect<-c(rep(2,17), rep(2.5, 16), rep(3, 16), rep(4, 18))
length(ntransect, nxstrm)
length(c(ntransect, nxstrm))
length(c(ntransect))
length(c(nxstrm))
ndf<-data.frame(nrow=67, ncol=93)
head(ndf)
ndf<-data.frame(matrix(nrow=67, ncol=93))
str(ndf)
ndf[,c(1,2)]<-c(ntransect, nxstrm)
str(ndf)
colnames(ndf)<-c("nstransect", "nxstrm",as.character(jd))
str(ndf)
test<-julCSb[,c(1:5)]
test
meantt<-sum(test[1,4:5], test[2,4:5])/2
meantt
meantt<-(test[1,4:5] + test[2,4:5])/2
meantt
meant<-(test[1,4] + test[2,4])/2
meant
dim(test)
dim(julCS)
head(julCS)
head(ndf)
head(julCS)
head(julCSb)
dim(julCSb)
julCSb[1,4:94]
head(nsxtrm, 10)
head(nxstrm, 10)
head(nxstrm, 11)
head(nxstrm, 15)
head(nxstrm, 120)
head(nxstrm, 20)
julCSb[1:20,1:3]
julCSb[17,1:3]
ndf2<-ndf
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
head(ndf2)
head(ndf2,20)
julCSb[17,4:94]
julCSb[1:5,1:3]
ndf[1:5,1:3]
(as.character(julCSb$Transect[i,1]=="2")
)
nxstrm<-c(2,seq(from=4, to=32, by=2), seq(from=1, to=31, by=2), seq(from=1, to=31, by=2), seq(from=1, to=35, by=2))
length(nxstrm)
ndf<-data.frame(matrix(nrow=66, ncol=93))
ndf[,c(1,2)]<-c(ntransect, nxstrm)
colnames(ndf)<-c("nstransect", "nxstrm",as.character(jd))
ndf[,c(1,2)]<-c(ntransect, nxstrm)
ndf<-data.frame(matrix(nrow=66, ncol=93))
ndf[,c(1,2)]<-c(ntransect, nxstrm)
str(ndf)
colnames(ndf)<-c("nstransect", "nxstrm",as.character(jd))
str(ndf)
julCSb[1:5,1:3]
ndf[1:5,1:3]
nxstrm<-c(2,seq(from=4, to=32, by=2), seq(from=1, to=31, by=2), seq(from=1, to=31, by=2), seq(from=1, to=35, by=2))
ntransect<-c(rep(2,17), rep(2.5, 16), rep(3, 16), rep(4, 18))
length(c(nxstrm))
ndf<-data.frame(matrix(nrow=66, ncol=93))
ndf[,c(1,2)]<-c(ntransect, nxstrm)
ndf<-as.data.frame(matrix(nrow=66, ncol=93))
ndf[,c(1,2)]<-c(ntransect, nxstrm)
ndf<-as.data.frame(matrix(nrow=66, ncol=93,0))
str(ndf)
ndf[,c(1,2)]<-c(ntransect, nxstrm)
str(ndf)
ndf<-as.data.frame(matrix(nrow=66, ncol=93,0))
str(ndf)
ndf[,1:2)]<-c(ntransect, nxstrm)
ndf[,1:2]<-c(ntransect, nxstrm)
str(ndf)
head(nxstrm)
ntransect<-c(rep(2,16), rep(2.5, 16), rep(3, 16), rep(4, 18))
length(c(nxstrm))
ndf<-as.data.frame(matrix(nrow=66, ncol=93,0))
ndf[,1:2]<-c(ntransect, nxstrm)
str(ndf)
colnames(ndf)<-c("nstransect", "nxstrm",as.character(jd))
str(ndf)
ndf2<-ndf
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
ndf2[1:20,1:5]
julCSb[15:20,1:5]
(764+851)/2
ndf2<-ndf
ndf2[1:20,1:5]
for(i in 2:length(rownames(ndf2))){
if(as.character(ndf2$ntransect[i,1]=="2")){
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
}
}
if
for(i in 2:length(rownames(ndf2))){
if(as.character(ndf2$ntransect[i,1]=="2")){
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
}
#else()
}
for(i in 2:length(rownames(ndf2))){
if(as.character(ndf2$ntransect[i,1]=="2")){
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
}
#else()
}
ndf2[1:20,1:5]
for(i in 2:length(rownames(ndf2))){
if(ndf2$ntransect[i,1]=="2")){
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
}
#else()
}
for(i in 2:length(rownames(ndf2))){
if(ndf2$ntransect[i,1]=="2"){
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
}
#else()
}
for(i in 2:length(rownames(ndf2))){
if(ndf2$ntransect[i,1]=="2"){print "YES"
}
}
?if
?if
?if
for(i in 2:length(rownames(ndf2))){
if(ndf2$ntransect[i,1]=="2","YES","NO")
}
if(ndf2$ntransect[1,1]=="2","YES","NO")
ifelse(ndf2$ntransect[1,1]=="2","YES","NO")
ifelse(as.numeric(ndf2$ntransect[1,1]==1),"YES","NO")
ifelse(as.numeric(ndf2$ntransect[1]==1),"YES","NO")
ifelse(as.numeric(ndf2$ntransect==1),"YES","NO")
ifelse(as.numeric(ndf2$ntransect)==1,"YES","NO")
ndf2[1:20,1:5]
str(ndf2)
ifelse(ndf2$ntransect==2,"YES","NO")
unique(ndf2$ntransect)
class(ndf2$ntransect)
nxstrm<-c(2,seq(from=4, to=32, by=2), seq(from=1, to=31, by=2), seq(from=1, to=31, by=2), seq(from=1, to=35, by=2))
head(nxstrm)
## Create a vector of Transect values
ntransect<-c(rep(2,16), rep(2.5, 16), rep(3, 16), rep(4, 18))
length(c(nxstrm))
## Create new data frame
ndf<-as.data.frame(matrix(nrow=66, ncol=93,0))
ndf[,1:2]<-c(ntransect, nxstrm)
colnames(ndf)<-c("ntransect", "nxstrm",as.character(jd))
ndf2<-ndf
## Calculate the mean cumulative irradiance of the xstrm values flanking the new xstrm value
class(ndf2$ntransect)
ifelse(ndf2$ntransect==2.0,"YES","NO")
ifelse(ndf2$ntransect==2,"YES","NO")
ndf2[1:20,1:5]
for(i in 2:length(rownames(ndf2))){
ifelse(ndf2$ntransect==2, for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2),"NO")
}
}
for(i in 2:length(rownames(ndf2))){
ifelse(ndf2$ntransect==2, for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
},"NO")
}
julCSb[15:35,1:5]
ndf2[15:35,1:5]
str(ndf2)
ndf2<-ndf
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
for(i in 17:31){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
ndf2[15:35,1:5]
julCSb[15:35,1:5]
rownames(julCSb)<-seq(1:length(rownames(julCSb),by=1)
rownames(julCSb)<-seq(1:length(rownames(julCSb),by=1))
rownames(julCSb)<-seq(1:length(rownames(julCSb),by=1))
rownames(julCSb)<-seq(1:length(rownames(julCSb)),by=1)
rownames(julCSb)<-seq(1,length(rownames(julCSb)),by=1)
julCSb[17,4:94]
julCSb[15:35,1:5]
ndf2[15:35,1:5]
julCSb[15:35,1:5]
ndf2<-ndf
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
#Fill in for Transect 2.5
for(i in 17:32){
ndf2[i,3:93]<-as.numeric((julCSb[i+1,4:94] + julCSb[i+2,4:94])/2)
}
ndf2[15:35,1:5]
julCSb[15:35,1:5]
ndf2[30:50,1:5]
julCSb[30:50,1:5]
julCSb[30:55,1:5]
julCSb<-julCSb[-52,]
julCSb[30:55,1:5]
for(i in 33:48){
ndf2[i,3:93]<-as.numeric((julCSb[i+2,4:94] + julCSb[i+3,4:94])/2)
}
ndf2[30:50,1:5]
ndf2[50:66,1:5]
ndf2[45:66,1:5]
julCSb[50:67,1:5]
ndf2[45:67,1:5]
julCSb[50:71,1:5]
for(i in 49:66){
ndf2[i,3:93]<-as.numeric((julCSb[i+4,4:94] + julCSb[i+5,4:94])/2)
}
ndf2[45:66,1:5]
Ldfw[50:55,1:3]
Ldfw[52,1:3]
Ldfw<-Ldfw[-52,]
Ldf<-Lightdf
Ldf<-Ldf[,-1]
Ldf$Transect<-as.factor(Ldf$Transect)
head(Ldf)
str(Ldf)
Ldf<-Ldf[which(Ldf$week >=15 & Ldf$week <=27),]
Ldf$tx<-droplevels(Ldf$tx)
Ldfr<-Ldf[,c(-3,-4,-8)]
library(reshape2)
Ldfw<-reshape(data=Ldfr, timevar= ("julianday"), idvar = c("Transect","xstrm","tx"), new.row.names= unique(Ldf$tx), direction="wide")
dim(Ldfw)
Ldfw<-Ldfw[-52,]
jd<-seq(from=99, to=189, by=1)
length(jd)
juldf<-as.data.frame(rep(Ldfw[,c(4:16)],each = 7))
colnames(juldf)<-as.character(jd)
julCS<-data.frame(matrix(nrow=70, ncol=91))
colnames(julCS)<-as.character(jd)
for(i in 1:length(rownames(julCS))){
julCS[i,]<-cumsum(as.numeric(juldf[i,]))
}
julCSb<-cbind(Ldfw[,c(1:3)], julCS)
str(julCSb
str(julCSb0
str(julCSb)
nxstrm<-c(2,seq(from=4, to=32, by=2), seq(from=1, to=31, by=2), seq(from=1, to=31, by=2), seq(from=1, to=35, by=2))
head(nxstrm)
ntransect<-c(rep(2,16), rep(2.5, 16), rep(3, 16), rep(4, 18))
length(c(nxstrm))
ndf<-as.data.frame(matrix(nrow=66, ncol=93,0))
ndf[,1:2]<-c(ntransect, nxstrm)
colnames(ndf)<-c("ntransect", "nxstrm",as.character(jd))
ndf2<-ndf
for(i in 2:16){
ndf2[i,3:93]<-as.numeric((julCSb[i,4:94] + julCSb[i+1,4:94])/2)
}
ndf2[25:50,1:5]
julCSb[25:50,1:5]
julCSb[25:55,1:5]
#Fill in for Transect 2.5
for(i in 17:32){
ndf2[i,3:93]<-as.numeric((julCSb[i+1,4:94] + julCSb[i+2,4:94])/2)
}
ndf2[25:50,1:5]
julCSb[25:55,1:5]
rownames(julCSb)<-seq(1,length(rownames(julCSb)),by=1)
julCSb[25:55,1:5]
for(i in 33:48){
ndf2[i,3:93]<-as.numeric((julCSb[i+2,4:94] + julCSb[i+3,4:94])/2)
}
ndf2[45:66,1:5]
julCSb[40:70,1:5]
for(i in 49:66){
ndf2[i,3:93]<-as.numeric((julCSb[i+3,4:94] + julCSb[i+5,4:94])/2)
}
ndf2[45:66,1:5]
Ldf<-Lightdf
# Clean up data frame
Ldf<-Ldf[,-1]
Ldf$Transect<-as.factor(Ldf$Transect)
head(Ldf)
str(Ldf)
# Extract the weeks of the growing season April 15 - June 21 (approximately weeks 1 - 27 (July 1 is week 27 in case there are some survey dates just after June 21))
Ldf<-Ldf[which(Ldf$week >=15 & Ldf$week <=27),]
# Drop unused levels in transect factor (artifacts of raw data)
Ldf$tx<-droplevels(Ldf$tx)
# Remove un-needed columns
Ldfr<-Ldf[,c(-3,-4,-8)]
## Make Ldfr wide format
# load "reshape" library
library(reshape2)
Ldfw<-reshape(data=Ldfr, timevar= ("julianday"), idvar = c("Transect","xstrm","tx"), new.row.names= unique(Ldf$tx), direction="wide")
dim(Ldfw)
# Remove row #52 in Ldfw because it is a type. There can't be a value for 32 and 33 meters from the irradiance model
Ldfw<-Ldfw[-52,]
# Make a new data frame with each column as each day of the year ~April 15 - ~July 1 (needs to be a bit longer to match the irradiance dataJulian days 103-193). Since the first Julian Day from the irradiance model is 5, but the first day of the year is JD=1. I subtracted 4 from the irradiance JD values to make the values trace back to Jan. 1.
#Vector of Julian days
jd<-seq(from=99, to=189, by=1)
length(jd)
# New data frame of watt/hours with 91 columns, one for each julian day
juldf<-as.data.frame(rep(Ldfw[,c(4:16)],each = 7))
colnames(juldf)<-as.character(jd)
#Empty data frame to put the cummulative sum values in
julCS<-data.frame(matrix(nrow=70, ncol=91))
colnames(julCS)<-as.character(jd)
# Loop to calculate the cummulative sum of watt hours per day and put it in the julCS data frame
for(i in 1:length(rownames(julCS))){
julCS[i,]<-cumsum(as.numeric(juldf[i,]))
}
## Add Transect, xstrm, and tx columns to the cummulative sum data
julCSb<-cbind(Ldfw[,c(1:3)], julCS)
str(julCSb)
head(julCSb)
Ldf<-Lightdf
# Clean up data frame
Ldf<-Ldf[,-1]
Ldf$Transect<-as.factor(Ldf$Transect)
head(Ldf)
str(Ldf)
# Extract the weeks of the growing season April 15 - June 21 (approximately weeks 1 - 27 (July 1 is week 27 in case there are some survey dates just after June 21))
Ldf<-Ldf[which(Ldf$week >=15 & Ldf$week <=27),]
# Drop unused levels in transect factor (artifacts of raw data)
Ldf$tx<-droplevels(Ldf$tx)
# Remove un-needed columns
Ldfr<-Ldf[,c(-3,-4,-8)]
## Make Ldfr wide format
# load "reshape" library
library(reshape2)
Ldfw<-reshape(data=Ldfr, timevar= ("julianday"), idvar = c("Transect","xstrm","tx"), direction="wide")
dim(Ldfw)
head(Ldfw)
# Remove row #52 in Ldfw because it is a type. There can't be a value for 32 and 33 meters from the irradiance model
Ldfw<-Ldfw[-52,]
# Make a new data frame with each column as each day of the year ~April 15 - ~July 1 (needs to be a bit longer to match the irradiance dataJulian days 103-193). Since the first Julian Day from the irradiance model is 5, but the first day of the year is JD=1. I subtracted 4 from the irradiance JD values to make the values trace back to Jan. 1.
#Vector of Julian days
jd<-seq(from=99, to=189, by=1)
length(jd)
# New data frame of watt/hours with 91 columns, one for each julian day
juldf<-as.data.frame(rep(Ldfw[,c(4:16)],each = 7))
colnames(juldf)<-as.character(jd)
#Empty data frame to put the cummulative sum values in
julCS<-data.frame(matrix(nrow=70, ncol=91))
colnames(julCS)<-as.character(jd)
# Loop to calculate the cummulative sum of watt hours per day and put it in the julCS data frame
for(i in 1:length(rownames(julCS))){
julCS[i,]<-cumsum(as.numeric(juldf[i,]))
}
## Add Transect, xstrm, and tx columns to the cummulative sum data
julCSb<-cbind(Ldfw[,c(1:3)], julCS)
str(julCSb)
head(julCSb)
rownames(julCSb)<-seq(1,length(rownames(julCSb)),by=1)
head(julCSb)
ndf2[1:4,1:5]
julCSb[1:4,1:5]
ndf2[1,3:93]<-as.numeric((julCSb[1,4:94] + julCSb[2,4:94])/2
ndf2[1,3:93]<-as.numeric((julCSb[1,4:94] + julCSb[2,4:94])/2)
ndf2[1,3:93]<-as.numeric((julCSb[1,4:94] + julCSb[2,4:94])/2)
ndf2[1:4,1:5]
dim(ndf2)
ndf2[67,]<-ndf[1,]
ndf2[67,]
ndf2[67,2]<-1
ndf2[67,]
ndf2[1,3:93]<-as.numeric((julCSb[1,4:94] + julCSb[2,4:94])/2)
ndf2[67,]<-ndf[1,]
ndf2[67,2]<-1
ndf2[67,]
ndf2[1:4,1:5]
ndf2[1,]
ndf2[67,]<-ndf[1,]
ndf2[67,]
row1m<-ndf[1,]
row1m
ndf2[67,]<-ndf2[1,]
ndf2[67,]
ndf2[67,2]<-1
ndf2[67,]
colnames(ndf2)
colnames(julCSb)
colnames(ndf2)
colnames(ndf2)[1:2]<-c("Transect", "xstrm")
colnames(ndf2)
cwh<-merge(ndf2,julCSb)
head(cwh)
str(ndf2)
str(julCSb)
ndf2$Transect<-as.factor(ndf2$Transect)
str(ndf2)
str(julCSb)
cwh<-merge(ndf2,julCSb)
str(cwh)
?as.integer
ndf2$xstrm<-as.integer(ndf2$xstrm)
cwh<-merge(ndf2,julCSb)
str(cwh)
?merge
cwh<-rbind(julCSb, ndf2)
rep(NA,67)
ndf2$tx<-as.factor(rep(NA,67))
str(ndf2)
ndf3<-ndf2[1,2,94,3:93]
ndf3<-ndf2[,c(1,2,94,3:93)]
str(ndf3)
str(julCSb)
cwh<-rbind(julCSb, ndf2)
str(cwh)
